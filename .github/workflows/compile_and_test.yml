# This is a basic workflow to help you get started with Actions
name: CMake Build Matrix

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }} # будет запускаться по очереди на всех типах машин
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu_GCC",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
          }
        - {
            name: "Ubuntu_CLANG",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install common dependencies
        if: startsWith(matrix.config.name, 'Ubuntu_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install libcppunit-dev cmake
          mkdir .aux_deps
          wget https://root.cern/download/root_v6.22.06.Linux-ubuntu20-x86_64-gcc9.3.tar.gz
          tar zxf root_v6.22.06.Linux-ubuntu20-x86_64-gcc9.3.tar.gz -C .aux_deps
          . ./.aux_deps/root/bin/thisroot.sh
          root-config --cflags
          root-config --features
          cmake --version

      - name: Install dependencies on ubuntu with gcc
        if: startsWith(matrix.config.name, 'Ubuntu_GCC')
        run: |
          gcc --version
      - name: Install dependencies on ubuntu with clang
        if: startsWith(matrix.config.name, 'Ubuntu_CLANG')
        run: |
          sudo apt-get install clang-11
          clang --version

      - name: Configure
        shell: bash
        run: |
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir \
            -DCMAKE_CXX_FLAGS='--std=c++17'

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}

      - name: Test
        shell: bash
        run: cmake --build build_test --target test
